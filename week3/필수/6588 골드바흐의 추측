#include <iostream>
#include <vector>
using namespace std;

const int MAX = 1000000;

vector<bool> is_prime(MAX + 1, true);

//소수 판별
void findPrime(){
    is_prime[0] = is_prime[1] = false;
    for(int i = 2; i * i <= MAX; ++i){
        if (is_prime[i]) {
            for (int j = i * i; j <= MAX; j += i) {
                is_prime[j] = false;
            }
        }
    }
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    findPrime();
    int n;
    while (cin >> n && n != 0) {
        bool found = false;
        int a = 0, b = 0;

        for (int i = 3; i <= n / 2; i += 2) {
            if (is_prime[i] && is_prime[n - i]) {
                a = i;
                b = n - i;
                found = true;
                break;
            }
        }

        if (found) {
            cout << n << " = " << a << " + " << b << "\n";
        } else {
            cout << "Goldbach's conjecture is wrong.\n";
        }
    }

    return 0;
}
